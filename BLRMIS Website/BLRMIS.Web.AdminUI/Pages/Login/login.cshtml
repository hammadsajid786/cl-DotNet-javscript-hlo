@page "/login"
@using BLRMIS.Web.Common;
@model ViewModel.LoginViewModel
@{
    Layout = null;
}

<!DOCTYPE html>

<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>BLRMIS | LOG IN</title>
    <link rel="shortcut icon" type="image/png" href="images/favicon.png" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.7.2/css/all.css" />
    <link rel="stylesheet" href="~/css/bootstrap.css">
    <link rel="stylesheet" href="~/css/smart_wizard_theme_arrows.css">
    <link rel="stylesheet" href="~/css/main.css">
    <link href="https://fonts.googleapis.com/css?family=Poppins:300,500,600,700" rel="stylesheet">
    <script src="~/js/jquery-3.3.1.min.js"></script>
    <script src="~/js/popper.min.js"></script>
    <script src="~/js/bootstrap.min.js"></script>
    <script src="~/js/jquery.cookie.js"></script>
    <script src="~/js/jquery.nice-select.min.js"></script>
    <script src="~/js/fastclick.js"></script>
    <script src="~/js/prism.js"></script>
    <script src="~/js/jquery.main.js"></script>
    <script src="~/lib/notify.js"></script>
    <script src="~/lib/knockout/knockout-3.5.0.js"></script>
    <script src="~/lib/knockout/knockout.validation.min.js"></script>
    <script src="~/js/blrmis.lib.js"></script>

    <style type="text/css">
        .validationMessage {
            color: maroon;
            color: #d20606;
            font-size: 12px;
            font-weight: 500;
            float: left;
        }

        #progress {
            position: fixed;
            z-index: 2147483647;
            top: 0;
            left: -6px;
            width: 0%;
            height: 5px;
            background: #00933b;
            -moz-border-radius: 1px;
            -webkit-border-radius: 1px;
            border-radius: 1px;
            -moz-transition: width 500ms ease-out,opacity 400ms linear;
            -ms-transition: width 500ms ease-out,opacity 400ms linear;
            -o-transition: width 500ms ease-out,opacity 400ms linear;
            -webkit-transition: width 500ms ease-out,opacity 400ms linear;
            transition: width 500ms ease-out,opacity 400ms linear
        }

            #progress.done {
                opacity: 0
            }

            #progress dd, #progress dt {
                position: absolute;
                top: 0;
                height: 2px;
                -moz-box-shadow: #b91f1f 1px 0 6px 1px;
                -ms-box-shadow: #b91f1f 1px 0 6px 1px;
                -webkit-box-shadow: #b91f1f 1px 0 6px 1px;
                box-shadow: #b91f1f 1px 0 6px 1px;
                -moz-border-radius: 100%;
                -webkit-border-radius: 100%;
                border-radius: 100%
            }

            #progress dd {
                opacity: 1;
                width: 20px;
                right: 0;
                clip: rect(-6px,22px,14px,10px)
            }

            #progress dt {
                opacity: 1;
                width: 180px;
                right: -80px;
                clip: rect(-6px,90px,14px,-6px)
            }

        @@-moz-keyframes pulse {
            30% {
                opacity: 1
            }

            60% {
                opacity: 0
            }

            100% {
                opacity: 1
            }
        }

        @@-ms-keyframes pulse {
            30% {
                opacity: .6
            }

            60% {
                opacity: 0
            }

            100% {
                opacity: .6
            }
        }

        @@-o-keyframes pulse {
            30% {
                opacity: 1
            }

            60% {
                opacity: 0
            }

            100% {
                opacity: 1
            }
        }

        @@-webkit-keyframes pulse {
            30% {
                opacity: .6
            }

            60% {
                opacity: 0
            }

            100% {
                opacity: .6
            }
        }

        @@keyframes pulse {
            30% {
                opacity: 1
            }

            60% {
                opacity: 0
            }

            100% {
                opacity: 1
            }
        }

        #progress.waiting dd, #progress.waiting dt {
            -moz-animation: pulse 2s ease-out 0s infinite;
            -ms-animation: pulse 2s ease-out 0s infinite;
            -o-animation: pulse 2s ease-out 0s infinite;
            -webkit-animation: pulse 2s ease-out 0s infinite;
            animation: pulse 2s ease-out 0s infinite
        }
    </style>
</head>
<body>
    <div id="progress" class="waiting">
        <dt></dt>
        <dd></dd>
    </div>
    <div id="wrapper">
        <div class="login">
            <div class="row h-100 justify-content-center align-items-center">
                <div class="login-cnt-holder">
                    <picture>
                        <img src="images/admin-logo-login.png" alt="logo">
                    </picture>
                    <div class="login-container">
                        <div class="hd-holder">
                            <h6>Login</h6>
                            <span class="bd-line"></span>
                        </div>
                        @if (ViewData["ErrorMessage"] != null && !string.IsNullOrEmpty(ViewData["ErrorMessage"].ToString()))
                        {
                            <div class="alert alert-danger" role="alert" id="errorMessage">
                                <img src="images/error-icon.svg" alt="error-icon">
                                @{
                                    if (ViewData["ErrorMessage"].ToString() == ErrorCodeEnum.INVALID_CREDENTIALS.ToString())
                                    {
                                        <span class="message">
                                            Invalid Username or Password.
                                        </span>
                                    }
                                    else if (ViewData["ErrorMessage"].ToString().ToLower().Trim() == ErrorCodeEnum.SOMETHING_WENT_WRONG.ToString())
                                    {
                                        <span class="message">
                                            Something went wrong please try again.
                                        </span>
                                    }
                                }
                                <button type="button" class="close" aria-label="Close" data-bind="click: onAlertClose">
                                    <span aria-hidden="true" style="font-size:20px">×</span>
                                </button>
                            </div>
                        }
                        <form method="post" class="was-validated mt20" data-bind="submit: onSubmit">
                            <div class="form-group">
                                <label>Username</label>
                                <input type="text" class="form-control pretty-input" asp-for="User.UserName" data-bind="value: userName">
                                @*<span asp-validation-for="User.UserName" class="text-danger"></span>*@
                            </div>
                            <div class="form-group">
                                <label>Password</label>
                                <input type="password" class="form-control pretty-input" asp-for="User.Password" autocomplete="new-password" data-bind="value: password">
                            </div>
                            <div class="login-button">
                                <button type="submit" class="login-btn btn-primary">Login</button>
                                @*<span>Did you <a href="#">forget your password?</a></span>*@
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        
        if (document.cookie.indexOf('AspNetCore.Cookies') > 0) {
            var cookieName = ".AspNetCore.Cookies";
            document.cookie = cookieName + '=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';
            cookieName = "token";
            document.cookie = cookieName + '=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';
            $.removeCookie('.AspNetCore.Cookies', { path: '/BLRMIS.AdminUI' });
            $.removeCookie('token', { path: '/' });
            location.reload();
        }

        $(document).ready(function () {
            //localStorage.clear();
            $lib.init({ apiBaseUrl: '@ViewBag.apiBaseUrl', appSettings: '@ViewBag.appSettings' });
            $lib.bindUI(viewModel);
        });

        var viewModel = {

            userName: ko.observable("").extend({ required: true }),
            password: ko.observable("").extend({ required: true }),
            errors: {},
            isRequestInProcess: ko.observable(false),
            showError: ko.observable(false),
            onSubmit: onSubmit,
            onAlertClose: function () {
                $("#errorMessage").hide();
            }
        }

        function onSubmit() {


            if (viewModel.errors().length == 0) {

                showLoader(0, 90, 5000);
                viewModel.isRequestInProcess(true);
                var requestModel = {
                    UserName: viewModel.userName(),
                    Password: viewModel.password()
                };
                //$lib.http.post("/login/", requestModel, loginResponse);

            } else {
                viewModel.errors.showAllMessages();
            }
            return (viewModel.errors().length == 0);
        }

        function loginResponse(err, res) {

            showLoader(90, 105, 1000);
            viewModel.isRequestInProcess(false);
            if (err) {
                if (err.status == 401)
                    $("#errorMessage").show();
                    //$toastMessages.showError("Invalid Username or Password");
                return;
            }
            if (res.Authenticated) {
                localStorage.setItem("token", res.Token);
                if (res.Settings) {
                    localStorage.setItem("userSettings", JSON.stringify(res.Settings));
                }

                window.location.href = "user";
            }
            else
                $("#errorMessage").show();
                //$toastMessages.showError("Invalid Username or Password");
        }

        function showLoader(start, end, duration) {

            $("#progress").removeClass("done");
            $('#progress').css('width', '0%');

            $({ property: start }).animate({ property: end }, {
                duration: duration,
                step: function () {
                    var _percent = Math.round(this.property);
                    $('#progress').css('width', _percent + "%");
                    if (_percent == 105) {
                        $("#progress").addClass("done");
                    }
                },
                complete: function () {
                }
                });
        }
    </script>
</body>
</html>
