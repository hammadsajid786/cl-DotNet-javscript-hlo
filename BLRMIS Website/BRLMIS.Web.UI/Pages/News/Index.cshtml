@page "/News"
@{

    ViewData["Title"] = "News";
}

<div id="main" class="">
    <div class="banner-home about-page">
        <div class="banner about-banner">
            <div class="container">
                <div class="banner-detail">
                    <h1 class="heading">
                        News
                    </h1>
                </div>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="new-page mt30">
            <div class="row">
                <div class="col-12">
                    <p class="total-recoed">
                        Total Record(s): <span data-bind="text: totalRecordsCount"></span>
                    </p>

                    <div data-bind="foreach: newsList">
                        <div class="updates-news">
                            <div class="news-date">
                                <div class="calendar">
                                    <p data-bind="date:NewsDate,dateFormat:'YYYY'" class="year"></p>
                                    <span data-bind="date:NewsDate,dateFormat:'DD'"></span>
                                    <strong data-bind="date:NewsDate,dateFormat:'MMMM'"></strong>
                                </div>
                            </div>
                            <div class="news-detail">
                                <h6 data-bind="text: NewsTitle"></h6>
                                <p data-bind="text: NewsDescription"></p>
                                @*<p data-bind="html:  (NewsDescription.length > 300 ? NewsDescription.substring(0, 300)+'...' : NewsDescription)"></p>*@
                                <a href="javascript:" data-bind="click: $parent.onReadMore">read more</a>
                            </div>
                        </div>

                    </div>
                    <div class="col-sm-12">
                        <div class="pagination-holder" data-bind="visible: newsList().length > 0">
                            <div class="row">
                                <ul class="pagination col-sm-6">
                                    <li class="page-item" data-bind="class: getPreviousButtonClass">
                                        <a class="page-link left" href="#" data-bind="click: onPrevious"><span class="fa fa-caret-left"></span></a>
                                    </li>
                                    <li>
                                        <input class="page-link form-control" data-bind="integerInput,
                                                      propertyName: 'totalPagesCount',
                                                      value: currentPageNo,
                                                      event: { change: onSearch }">
                                    </li>
                                    <li><p>of <span data-bind="text: totalPagesCount"></span></p></li>
                                    <li class="page-item" data-bind="class: getNextButtonClass">
                                        <a class="page-link right" href="#" data-bind="click: onNext"><span class="fa fa-caret-right"></span></a>
                                    </li>
                                </ul>
                                <div class="records-field col-sm-6 text-right">
                                    <label>
                                        Records per page
                                    </label>
                                    <div class="custom-dropdown cus-sel">
                                        <select class="form-control" id="ddlRecordsPerPage" data-bind="options: recordsPerPageList,
                                                                                optionsText: 'Text',
                                                                                optionsValue: 'Value',
                                                                                value: selectedPageSize"></select>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

@section scripts{

    <script>


        $(document).ready(function () {


            $lib.bindUI(viewModel);
            $lib.setPageTitle("News");
            viewModel.currentPageNo(1);

            fillRecordsPerPage();
            pageSize_Change();
            GridLoad();
        });
            var viewModel = {
                searchTitle: ko.observable(""),
                newsList: ko.observableArray(),
                orderBy: ko.observable("CreatedDate"),
                isAscendingOrder: ko.observable(false),
                selectedPageSize: ko.observable(10),
                currentPageNo: ko.observable(1),
                recordsPerPageList: ko.observableArray([]),
                totalPagesCount: ko.observable(0),
                totalRecordsCount: ko.observable(0),
                getPreviousButtonClass: ko.pureComputed(function () {
                    var currentPageNumber = parseInt(this.viewModel.currentPageNo());
                    return (currentPageNumber <= 1) ? '' : 'active';
                }),
                getNextButtonClass: ko.pureComputed(function () {

                    var currentPageNumber = parseInt(this.viewModel.currentPageNo());
                    var totalPagesCount = parseInt(this.viewModel.totalPagesCount());
                    return (currentPageNumber < totalPagesCount) ? 'active' : '';
                }),
            }

            function GridLoad() {
                if (!isNaN(parseInt(viewModel.currentPageNo())) && parseInt(viewModel.currentPageNo()) > 0) {
                    var queryParams = {
                        searchTitle: viewModel.searchTitle(),
                        PageIndex: parseInt(viewModel.currentPageNo()) - 1,
                        OrderBy: viewModel.orderBy(),
                        SortDirection: viewModel.isAscendingOrder() ? "Ascending" : "Descending",
                        PageSize: viewModel.selectedPageSize(),

                        Title: viewModel.searchTitle(),
                        Description: viewModel.searchTitle(),
                    };

                    var parameters = "filter:Title=" + viewModel.searchTitle() + "|Description=" + viewModel.searchTitle() + ";" + "orderby:" + queryParams.OrderBy + "=" + queryParams.SortDirection
                        + ";size:" + queryParams.PageSize + ";index:" + queryParams.PageIndex;

                    $lib.showSpinner(true);

                    $lib.http.get('/News/GetAll?SearchParams=' + parameters, (err, res) => {
                        $lib.showSpinner(false);
                        if (err) return;

                        else {
                            for (var i = 0; i < res.Records.length; i++) {
                                var html = res.Records[i].NewsDescription;
                                var text = $util.getPlainText(html);
                                res.Records[i].NewsDescription = text.length > 400 ? (text.substring(0, 400) + "...") : text;
                            }

                            viewModel.newsList(res.Records);
                            viewModel.totalPagesCount(res.TotalPages);
                            viewModel.totalRecordsCount(res.TotalRecords);
                        }
                    })

                }
                else {
                    //viewModel.listModel.currentPageNo(1)
                    $toastMessages.showError("Invalid Page Number");
                }
            }

            function GetData(id) {
                $lib.http.get('/news/' + id, (err, res) => {
                    if (err) return;
                    else {
                        viewModel.newsId(res.NewsId);
                        viewModel.newsTitle(res.NewsTitle);
                        viewModel.newsDescription(res.NewsDescription);



                        viewModel.alreadyAttachedFiles(res.Attachments);

                        for (var i = 0; i < viewModel.alreadyAttachedFiles().length; i++) {
                            viewModel.fileModel.fileId = viewModel.alreadyAttachedFiles()[i].AttachmentId;
                            viewModel.fileModel.fileName = viewModel.alreadyAttachedFiles()[i].OriginalFileName;
                            viewModel.fileModelList.push(JSON.parse(JSON.stringify(viewModel.fileModel)));
                        }
                    }
                })
            }

            var selectListModel = function (value, text) {
                this.Text = text;
                this.Value = value;
            }

            function fillRecordsPerPage() {

                viewModel.recordsPerPageList([
                    new selectListModel(10, "10"),
                    new selectListModel(20, "20")
                ]);
            }

            function pageSize_Change() {

                viewModel.selectedPageSize.subscribe(function () {
                    GridLoad();
                });
            }

            GridLoad();
            fillRecordsPerPage();
            pageSize_Change();

            viewModel.onSearch = function () {
                GridLoad();
            }

            viewModel.onReadMore = function (news) {
                window.location.href = "NewsDetail?Id=" + news.NewsId;
                // GetData(news.NewsId)
            }


            viewModel.onPrevious = function () {

                var currentPageNo = parseInt(viewModel.currentPageNo());
                if (currentPageNo > 1) {
                    viewModel.currentPageNo(--currentPageNo);
                    GridLoad();
                }
            }

            viewModel.onNext = function () {

                var currentPageNo = parseInt(viewModel.currentPageNo());
                var totalPageCount = parseInt(viewModel.totalPagesCount());
                if (currentPageNo < totalPageCount) {
                    viewModel.currentPageNo(++currentPageNo);
                    GridLoad();
                }
            }



          //  $lib.bindUI(viewModel);
        
    </script>
}